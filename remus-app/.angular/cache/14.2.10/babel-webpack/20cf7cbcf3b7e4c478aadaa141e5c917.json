{"ast":null,"code":"import { AlertController, ModalController, NavController } from '@ionic/angular';\nimport { NotesService } from '../../providers/notes/notes.service';\nimport { DetailPage } from \"../detail/detail.page\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../providers/notes/notes.service\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/common\";\n\nfunction NotesPage_ion_item_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-item\", 9);\n    i0.ɵɵlistener(\"click\", function NotesPage_ion_item_9_Template_ion_item_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const note_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.detailModal(note_r1));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const note_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", note_r1.title, \" \");\n  }\n}\n\nexport let NotesPage = /*#__PURE__*/(() => {\n  class NotesPage {\n    constructor(noteService, alertCtrl, navCtrl, modalCtrl) {\n      this.noteService = noteService;\n      this.alertCtrl = alertCtrl;\n      this.navCtrl = navCtrl;\n      this.modalCtrl = modalCtrl;\n    }\n\n    ngOnInit() {\n      this.noteService.load();\n    }\n\n    addNote() {\n      this.alertCtrl.create({\n        header: 'Nouvelle Note',\n        inputs: [{\n          type: 'text',\n          name: 'title',\n          placeholder: 'Titre de la note'\n        }],\n        buttons: [{\n          text: 'Annuler'\n        }, {\n          text: 'Enregistrer',\n          handler: data => {\n            this.noteService.createNote(data.title);\n          }\n        }]\n      }).then(alert => {\n        alert.present();\n      });\n    }\n\n    detailModal(note) {\n      this.modalCtrl.create({\n        component: DetailPage,\n        componentProps: {\n          note: note\n        },\n        swipeToClose: true\n      }).then(modal => {\n        modal.present();\n      });\n    }\n\n  }\n\n  NotesPage.ɵfac = function NotesPage_Factory(t) {\n    return new (t || NotesPage)(i0.ɵɵdirectiveInject(i1.NotesService), i0.ɵɵdirectiveInject(i2.AlertController), i0.ɵɵdirectiveInject(i2.NavController), i0.ɵɵdirectiveInject(i2.ModalController));\n  };\n\n  NotesPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NotesPage,\n    selectors: [[\"app-notes\"]],\n    decls: 13,\n    vars: 2,\n    consts: [[1, \"new-background-color\"], [2, \"font-family\", \"'Playfair display', serif\"], [\"slot\", \"end\", 3, \"click\"], [\"name\", \"close-outline\", 1, \"ion-margin\"], [3, \"fullscreen\"], [\"lines\", \"none\", \"button\", \"\", \"detail\", \"\", \"routerDirection\", \"forward\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"vertical\", \"bottom\", \"horizontal\", \"start\", \"slot\", \"fixed\"], [\"color\", \"btn-purple\", 1, \"dice\", 3, \"click\"], [\"name\", \"create-outline\"], [\"lines\", \"none\", \"button\", \"\", \"detail\", \"\", \"routerDirection\", \"forward\", 3, \"click\"]],\n    template: function NotesPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-title\", 1)(3, \"h1\");\n        i0.ɵɵtext(4, \"Notes\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"ion-buttons\", 2);\n        i0.ɵɵlistener(\"click\", function NotesPage_Template_ion_buttons_click_5_listener() {\n          return ctx.modalCtrl.dismiss(undefined, \"cancel\");\n        });\n        i0.ɵɵelement(6, \"ion-icon\", 3);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"ion-content\", 4)(8, \"ion-list\");\n        i0.ɵɵtemplate(9, NotesPage_ion_item_9_Template, 2, 1, \"ion-item\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"ion-fab\", 6)(11, \"ion-fab-button\", 7);\n        i0.ɵɵlistener(\"click\", function NotesPage_Template_ion_fab_button_click_11_listener() {\n          return ctx.addNote();\n        });\n        i0.ɵɵelement(12, \"ion-icon\", 8);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"fullscreen\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.noteService.notes);\n      }\n    },\n    dependencies: [i3.NgForOf, i2.IonButtons, i2.IonContent, i2.IonFab, i2.IonFabButton, i2.IonHeader, i2.IonIcon, i2.IonItem, i2.IonList, i2.IonTitle, i2.IonToolbar],\n    styles: [\"ion-content[_ngcontent-%COMP%]{--background: #fff url(book.png) no-repeat center center / cover}ion-item[_ngcontent-%COMP%]{--background: #00000000 }ion-header[_ngcontent-%COMP%]{height:10%}ion-toolbar[_ngcontent-%COMP%]{--opacity: 0;color:#000}ion-list[_ngcontent-%COMP%]{--opacity: 0;display:var(--opacity)}\"]\n  });\n  return NotesPage;\n})();","map":null,"metadata":{},"sourceType":"module"}