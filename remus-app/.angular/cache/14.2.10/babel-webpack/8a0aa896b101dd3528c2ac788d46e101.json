{"ast":null,"code":"import { Trait } from './trait.model';\nexport const all_templates = {\n  'D&D': 'Donjons et Dragons',\n  'WtA': 'Loup-Garou : l\\'apocalypse',\n  'SW': 'Star Wars',\n  'Aventure': 'Aventure',\n  'L5R': 'Légende des 5 anneaux',\n  'Custom': 'Personnalisable'\n};\nexport class CharacterSheet {\n  constructor() {\n    this.template = null;\n    this.tags = '';\n    this.img = null;\n    this.name = new Trait('nom');\n    this.age = new Trait('age', '^[0-9][0-9]*$');\n    this.sex = new Trait('sexe');\n    this.background = new Trait('origines');\n    this.traits = [];\n    this.skills = [];\n    this.other_personal = null;\n  }\n\n  isEmpty() {\n    let empty_skill = true;\n    let empty_trait = true;\n    let empty_other = true;\n\n    for (const t of this.traits) {\n      console.log(typeof t);\n      empty_trait = empty_trait && t.equals(new Trait(t.name));\n    }\n\n    for (const s of this.skills) {\n      empty_skill = empty_skill && s.name === '';\n    }\n\n    if (this.other_personal) {\n      for (const d of this.other_personal) {\n        empty_other = empty_other && d.value === '';\n      }\n    }\n\n    return this.age.value === '' && this.img === null && this.name.value === '' && this.background.value === '' && empty_skill && empty_trait && empty_other;\n  }\n\n} // Character Sheet of Dongeons and dragons\n\nexport class DnDCharacterSheet extends CharacterSheet {\n  constructor() {\n    super(...arguments);\n    this.template = 'D&D';\n    this.tags = 'd&d,fantasy';\n    this.other_personal = [new Trait('Race'), new Trait('Classe')];\n    this.traits = [new Trait('Force', '^-?[0-9]*$'), new Trait('Dextérité', '^-?[0-9]*$'), new Trait('Endurance', '^-?[0-9]*$'), new Trait('Intelligence', '^-?[0-9]*$'), new Trait('Perception', '^-?[0-9]*$')];\n  }\n\n} // Character Sheet for Aventure (RPG of Mayhar)\n\nexport class AventureCharacterSheet extends CharacterSheet {\n  constructor() {\n    super(...arguments);\n    this.template = 'Aventure';\n    this.tags = 'aventure,fantasy';\n    this.other_personal = [new Trait('Race'), new Trait('Classe')];\n    this.traits = [new Trait('Physique'), new Trait('Social'), new Trait('Mental')];\n  }\n\n} // Character Sheets for Word of Darkness\n\nexport class WoDCharacterSheet extends CharacterSheet {\n  constructor() {\n    super(...arguments);\n    this.traits = [new Trait('Force'), new Trait('Dextérité'), new Trait('Vigueur'), new Trait('Charisme'), new Trait('Manipulation'), new Trait('Apparence'), new Trait('Perception'), new Trait('Intelligence'), new Trait('Astuce')];\n  }\n\n}\nexport class WtACharacterSheet extends WoDCharacterSheet {\n  constructor() {\n    super(...arguments);\n    this.template = 'WtA';\n    this.tags = 'wod,wta,werewolf,modern';\n    this.other_personal = [new Trait('Race'), new Trait('Auspice'), new Trait('Tribue')];\n  }\n\n} // Character Sheets for Star Wars\n\nexport class StarWarsCharacterSheet extends CharacterSheet {\n  constructor() {\n    super(...arguments);\n    this.template = 'SW';\n    this.tags = 'sw,sf,space';\n    this.traits = [new Trait('Vigueur'), new Trait('Agilité'), new Trait('Intelligence'), new Trait('Ruse'), new Trait('Volonté'), new Trait('Présence'), new Trait('Valeur de Force')];\n    this.other_personal = [new Trait('Espèce'), new Trait('Carrière'), new Trait('Spécialité')];\n  }\n\n} // Character Sheets for Legend of the 5 rings\n\nexport class L5RCharacterSheet extends CharacterSheet {\n  constructor() {\n    super(...arguments);\n    this.template = 'L5R';\n    this.tags = 'l5r';\n    this.traits = [new Trait('Terre'), new Trait('Constitution'), new Trait('Volonté'), new Trait('Eau'), new Trait('Force'), new Trait('Perception'), new Trait('Air'), new Trait('Réflexes'), new Trait('Intuition'), new Trait('Feu'), new Trait('Agilité'), new Trait('Intelligence'), new Trait('Vide')];\n    this.other_personal = [new Trait('Clan'), new Trait('École')];\n  }\n\n} // Customisable Character Sheets\n\nexport class CustomCharacterSheet extends CharacterSheet {\n  constructor(sheet) {\n    super();\n    this.template = 'Custom';\n    this.other_personal = [];\n\n    if (sheet) {\n      this.tags = sheet.tags;\n      this.other_personal = sheet.other_personal; //this.traits = sheet.traits;\n\n      for (const t of sheet.traits) {\n        this.traits.push(new Trait(t.name));\n      }\n    }\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}