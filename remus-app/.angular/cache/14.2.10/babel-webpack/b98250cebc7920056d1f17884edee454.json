{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/antho/OneDrive/Documents/GitHub/Remus-app/remus-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Player } from \"src/app/models/player.models\";\nimport { Conversation } from \"src/app/models/conversation.model\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { PlayersService } from \"src/app/providers/players/players.service\";\nimport { ModalController, IonContent } from \"@ionic/angular\";\nimport { Message } from \"src/app/models/message.model\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/providers/players/players.service\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"src/app/components/message/message.component\";\n\nfunction SessionChatPage_ion_select_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const player_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", player_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(player_r2.name);\n  }\n}\n\nfunction SessionChatPage_div_10_app_message_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-message\", 15);\n  }\n\n  if (rf & 2) {\n    const message_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"m\", message_r3)(\"show\", message_r3.target != ctx_r4.getFilteredConv().getPreviousMessage(message_r3).target || message_r3.player != ctx_r4.getFilteredConv().getPreviousMessage(message_r3).player);\n  }\n}\n\nfunction SessionChatPage_div_10_app_message_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-message\", 16);\n  }\n\n  if (rf & 2) {\n    const message_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"m\", message_r3)(\"show\", message_r3.target != ctx_r5.getFilteredConv().getPreviousMessage(message_r3).target || message_r3.player != ctx_r5.getFilteredConv().getPreviousMessage(message_r3).player);\n  }\n}\n\nfunction SessionChatPage_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, SessionChatPage_div_10_app_message_1_Template, 1, 2, \"app-message\", 13);\n    i0.ɵɵtemplate(2, SessionChatPage_div_10_app_message_2_Template, 1, 2, \"app-message\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r3.player == ctx_r1.player);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r3.player == ctx_r1.target);\n  }\n}\n\nexport let SessionChatPage = /*#__PURE__*/(() => {\n  class SessionChatPage {\n    //@Input() peerService: Peer2peerService;\n    constructor(formBuilder, playerServ, modalController) {\n      this.formBuilder = formBuilder;\n      this.playerServ = playerServ;\n      this.modalController = modalController;\n      this.target = new Player(undefined);\n      this.player = new Player(undefined);\n    }\n\n    closeModal() {\n      this.modalController.dismiss();\n    }\n\n    ngOnInit() {\n      this.myForm = this.formBuilder.group({\n        message: null\n      });\n      setTimeout(() => {\n        this.content.scrollToBottom(0);\n      }, 100);\n    }\n\n    send() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        const message = _this.myForm.getRawValue().message;\n\n        _this.myForm.reset();\n\n        console.log(\"sending \", message, \"to player \", _this.target);\n\n        _this.target.conn.send({\n          message: message\n        });\n\n        if (!_this.playerServ.isHost) _this.playerServ.getPlayerByName(\"host\").conn.send({\n          message: message,\n          target: _this.target.name\n        });\n\n        _this.playerServ.getConv(_this.target).addMessage(new Message(new Date(), _this.playerServ.me(), message, _this.target));\n\n        setTimeout(() => {\n          _this.content.scrollToBottom(100);\n        }, 100);\n\n        _this.getFilteredConv();\n      })();\n    }\n\n    getFilteredConv() {\n      let filteredConv = new Conversation();\n      this.playerServ.playersList.forEach(player => {\n        //console.log(\"Conv avec \", player.name, this.playerServ.getConv(player));\n        if (this.playerServ.getConv(player)) filteredConv = filteredConv.concat(this.playerServ.getConv(player));\n      });\n      filteredConv = filteredConv.sort((a, b) => a.timestamp.getTime() - b.timestamp.getTime()); //console.log(\"Conversations : \", filteredConv);\n\n      return filteredConv.filter(message => message.target == this.target\n      /*&&  message.player==this.player*/\n      ||\n      /*message.target==this.player &&*/\n      message.player == this.target);\n    }\n\n    changeTarget(event) {\n      console.log(event.target.value);\n      this.target = event.target.value;\n    }\n\n    changePlayer(event) {\n      console.log(event.target.player);\n      this.player = event.target.player;\n    }\n\n  }\n\n  SessionChatPage.ɵfac = function SessionChatPage_Factory(t) {\n    return new (t || SessionChatPage)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.PlayersService), i0.ɵɵdirectiveInject(i3.ModalController));\n  };\n\n  SessionChatPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SessionChatPage,\n    selectors: [[\"app-session-chat\"]],\n    viewQuery: function SessionChatPage_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(IonContent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n      }\n    },\n    inputs: {\n      target: \"target\",\n      player: \"player\"\n    },\n    decls: 17,\n    vars: 7,\n    consts: [[\"color\", \"header\"], [\"interface\", \"popover\", \"placeholder\", \"All Players\", 3, \"value\", \"ionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"slot\", \"end\", 3, \"click\"], [\"name\", \"close-outline\", 1, \"ion-margin\"], [\"scroll-y\", \"true\", 1, \"ion-padding\"], [\"class\", \"message-content\", 4, \"ngFor\", \"ngForOf\"], [3, \"formGroup\", \"ngSubmit\"], [\"required\", \"\", \"formControlName\", \"message\", 3, \"placeholder\"], [\"block\", \"\", \"shape\", \"round\", \"size\", \"medium\", \"color\", \"btn-purple\", \"type\", \"submit\", 3, \"disabled\"], [\"name\", \"paper-plane-outline\"], [3, \"value\"], [1, \"message-content\"], [\"class\", \"me\", 3, \"m\", \"show\", 4, \"ngIf\"], [\"class\", \"others\", 3, \"m\", \"show\", 4, \"ngIf\"], [1, \"me\", 3, \"m\", \"show\"], [1, \"others\", 3, \"m\", \"show\"]],\n    template: function SessionChatPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-title\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-item\")(5, \"ion-select\", 1);\n        i0.ɵɵlistener(\"ionChange\", function SessionChatPage_Template_ion_select_ionChange_5_listener($event) {\n          return ctx.changeTarget($event);\n        });\n        i0.ɵɵtemplate(6, SessionChatPage_ion_select_option_6_Template, 2, 2, \"ion-select-option\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"ion-buttons\", 3);\n        i0.ɵɵlistener(\"click\", function SessionChatPage_Template_ion_buttons_click_7_listener() {\n          return ctx.closeModal();\n        });\n        i0.ɵɵelement(8, \"ion-icon\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"ion-content\", 5);\n        i0.ɵɵtemplate(10, SessionChatPage_div_10_Template, 3, 2, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"ion-footer\")(12, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function SessionChatPage_Template_form_ngSubmit_12_listener() {\n          return ctx.send();\n        });\n        i0.ɵɵelementStart(13, \"ion-item\");\n        i0.ɵɵelement(14, \"ion-textarea\", 8);\n        i0.ɵɵelementStart(15, \"ion-button\", 9);\n        i0.ɵɵelement(16, \"ion-icon\", 10);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.player.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.target);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.playerServ.playersList);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getFilteredConv());\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate1(\"placeholder\", \"Envoyer un message \\u00E0 \", ctx.target.name, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.myForm.invalid);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i3.IonButton, i3.IonButtons, i3.IonContent, i3.IonFooter, i3.IonHeader, i3.IonIcon, i3.IonItem, i3.IonSelect, i3.IonSelectOption, i3.IonTextarea, i3.IonTitle, i3.IonToolbar, i3.SelectValueAccessor, i3.TextValueAccessor, i1.FormGroupDirective, i1.FormControlName, i5.MessageComponent],\n    styles: [\"ion-content[_ngcontent-%COMP%]{--overflow: visible}.me[_ngcontent-%COMP%]{align-self:flex-end;text-align:right;max-width:70%;margin:2px 0}.others[_ngcontent-%COMP%]{align-self:flex-start;max-width:70%;margin:2px 0}.message-content[_ngcontent-%COMP%]{display:flex;width:100%;flex-direction:column-reverse}.new-background-color[_ngcontent-%COMP%]{--background: #faefe1}\"]\n  });\n  return SessionChatPage;\n})();","map":null,"metadata":{},"sourceType":"module"}