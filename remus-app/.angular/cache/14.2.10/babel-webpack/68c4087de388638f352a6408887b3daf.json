{"ast":null,"code":"import { CharacterSheet, DnDCharacterSheet, AventureCharacterSheet, WtACharacterSheet, StarWarsCharacterSheet, L5RCharacterSheet, CustomCharacterSheet } from 'src/app/models/character-sheet.model';\nimport { all_characters } from 'src/mocks/character';\nimport { PlayersService } from '../players/players.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../players/players.service\";\nexport let CharacterService = /*#__PURE__*/(() => {\n  class CharacterService {\n    constructor(playerService) {\n      this.playerService = playerService;\n      this.default_template = 'D&D';\n      this.characters = playerService.isHost ? all_characters : [];\n      this.template = this.default_template;\n    }\n\n    setCustomSheet(sheet) {\n      this.customSheet = sheet;\n    }\n\n    getCustomSheet() {\n      return this.customSheet;\n    }\n\n    getTemplate() {\n      return this.template;\n    }\n\n    setTemplate(new_template) {\n      this.template = new_template;\n    }\n\n    selectCharacterSheetTemplate() {\n      switch (this.template) {\n        case 'Aventure':\n          this.empty_characters = () => {\n            return new AventureCharacterSheet();\n          };\n\n          break;\n\n        case 'WtA':\n          this.empty_characters = () => {\n            return new WtACharacterSheet();\n          };\n\n          break;\n\n        case 'SW':\n          this.empty_characters = () => {\n            return new StarWarsCharacterSheet();\n          };\n\n          break;\n\n        case 'L5R':\n          this.empty_characters = () => {\n            return new L5RCharacterSheet();\n          };\n\n          break;\n\n        case 'Custom':\n          this.empty_characters = () => {\n            return new CustomCharacterSheet(this.customSheet);\n          };\n\n          break;\n\n        case 'D&D':\n        default:\n          this.empty_characters = () => {\n            return new DnDCharacterSheet();\n          };\n\n          break;\n      }\n    }\n\n    getEmptyCharacter() {\n      this.selectCharacterSheetTemplate();\n      return this.empty_characters();\n    }\n\n    getCharacter(index) {\n      if (index === null) {\n        // Si le MJ veut créer une nouveau PNJ\n        return undefined;\n      } else {\n        return this.characters[index];\n      }\n    }\n\n    remove(character) {\n      this.characters.splice(this.characters.indexOf(character), 1);\n    }\n\n    addCharacter(character) {\n      this.characters.push(character);\n    }\n\n    import(character) {\n      if (this.playerService.isHost) {\n        this.characters.push(character);\n      } else {\n        this.characters[0] = character;\n      }\n    }\n\n  }\n\n  CharacterService.ɵfac = function CharacterService_Factory(t) {\n    return new (t || CharacterService)(i0.ɵɵinject(i1.PlayersService));\n  };\n\n  CharacterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CharacterService,\n    factory: CharacterService.ɵfac,\n    providedIn: 'root'\n  });\n  return CharacterService;\n})();","map":null,"metadata":{},"sourceType":"module"}